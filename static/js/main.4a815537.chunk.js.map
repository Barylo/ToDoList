{"version":3,"sources":["components/ToDoInput/ToDoInput.module.css","components/UI/Button/Button.jsx","components/UI/Input/Input.jsx","components/ToDoInput/ToDoInput.jsx","components/Counter.jsx","components/Header/Header.jsx","components/ToDoItem/ToDoItem.jsx","components/EditableRow.jsx","components/ToDoList.jsx","components/useLocalStorage.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Button","styled","button","Input","input","FormControl","div","props","invalid","ToDoInput","items","setItems","setInputText","inputText","setCountCreated","countCreated","useState","isValid","setIsValid","addItem","trim","length","prevItems","newTodo","unshift","id","uuidv4","text","slice","backgroundColor","Math","floor","random","toString","className","styles","form","onChange","event","target","value","newValue","onKeyDown","handleKeyDown","key","type","onClick","form2","e","preventDefault","fetch","then","response","json","data","map","item","Counter","countEdited","countDeleted","Header","ToDoItem","setTodoEditing","setEditingText","setCountDeleted","isMarked","setIsMarked","style","prevValue","textDecoration","form3","handleEdit","filter","deleteItem","EditableRow","editingText","setCountEdited","editArr","editTodo","handleSaveEdited","ToDoList","todoEditing","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a815537.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form2\":\"ToDoInput_form2__1BcPq\",\"form3\":\"ToDoInput_form3__3W3qN\",\"form\":\"ToDoInput_form__VZsk3\"};","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-family: \"Architects Daughter\", cursive;\r\n  padding: 0.1rem 0.1rem;\r\n  border: 1px solid #8b005d;\r\n  color: #8b005d;\r\n  background: #ffeaa7;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover,\r\n  &:active {\r\n    background: #33afff;\r\n    border-color: #ac0e77;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .button {\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  border: 3px solid #ccc;\r\n  font-family: \"Architects Daughter\", cursive;\r\n  line-height: 1rem;\r\n  padding: 0 0.25rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background: #fdcb6e;\r\n    border-color: #8b005d;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport styled from \"styled-components\";\r\nimport styles from \"./ToDoInput.module.css\";\r\nimport Input from \"../UI/Input/Input\";\r\n\r\nconst FormControl = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  border: 3px transparent #ccc;\r\n  font-family: \"Architects Daughter\", cursive;\r\n  line-height: 1rem;\r\n  padding: 0 0.25rem;\r\n\r\n  & input {\r\n    display: inline-block;\r\n    width: 70%;\r\n    border-radius: 5px;\r\n    font: inherit;\r\n    line-height: 2.5rem;\r\n    padding: 0 0.25rem;\r\n    border: 2px solid ${(props) => (props.invalid ? \"red\" : \"transparent\")};\r\n    background: ${(props) => (props.invalid ? \"#ffd7d7\" : \"transparent\")};\r\n    border-bottom: dashed 3px #fdcb6e;\r\n  }\r\n\r\n  & input:focus {\r\n    outline: none;\r\n    background: #fdcb6e;\r\n    border-color: #8b005d;\r\n  }\r\n`;\r\n\r\nfunction ToDoInput({\r\n  items,\r\n  setItems,\r\n  setInputText,\r\n  inputText,\r\n  setCountCreated,\r\n  countCreated,\r\n}) {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const fetchData = (e) => {\r\n    e.preventDefault();\r\n    let url =\r\n      \"https://gist.githubusercontent.com/alexandrtovmach/0c8a29b734075864727228c559fe9f96/raw/c4e4133c9658af4c4b3474475273b23b4a70b4af/todo-task.json\";\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems([\r\n          ...items,\r\n          ...data.map((item) => {\r\n            return {\r\n              text: item.text.slice(0, 24),\r\n              id: uuidv4(),\r\n              backgroundColor: `${\r\n                \"#\" + Math.floor(Math.random() * 16777215).toString(16)\r\n              }`,\r\n            };\r\n          }),\r\n        ]);\r\n      });\r\n  };\r\n\r\n  function handleChange(event) {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  function addItem() {\r\n    if (inputText.trim().length === 0) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    setItems((prevItems) => {\r\n      const newTodo = [...prevItems];\r\n      newTodo.unshift({\r\n        id: uuidv4(),\r\n        text: inputText.slice(0, 24),\r\n        backgroundColor: `${\r\n          \"#\" + Math.floor(Math.random() * 16777215).toString(16)\r\n        }`,\r\n      });\r\n\r\n      return newTodo;\r\n    });\r\n\r\n    setInputText(\"\");\r\n    setCountCreated(countCreated + 1);\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      addItem();\r\n    }\r\n    return <Input type=\"text\" onKeyDown={handleKeyDown} />;\r\n  }\r\n\r\n  function handleClearList() {\r\n    setItems([]);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <FormControl invalid={!isValid}>\r\n        <Input\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          type=\"text\"\r\n          value={inputText}\r\n        />{\" \"}\r\n        <Button onClick={addItem}>\r\n          <span>Add</span>\r\n        </Button>\r\n      </FormControl>{\" \"}\r\n      <div className={styles.form2}>\r\n        <Button onClick={fetchData}>\r\n          <span>Get TodoList from outside data</span>\r\n        </Button>{\" \"}\r\n        <Button onClick={handleClearList}>\r\n          <span>Clear To-do list</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from \"react\";\r\n\r\nfunction Counter({ countCreated, countEdited, countDeleted }) {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <p>{countCreated} To-Does are created</p>\r\n      <p>{countEdited} To-Does are updated</p>\r\n      <p>{countDeleted} To-Does are deleted</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header({ items }) {\r\n  return (\r\n    <div className=\"heading\">\r\n      <h1>To-Do List with {items.length} tasks</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport \"./ToDoItem.css\";\r\nimport styles from \"../ToDoInput/ToDoInput.module.css\";\r\n\r\nfunction ToDoItem({\r\n  setTodoEditing,\r\n  setEditingText,\r\n  setItems,\r\n  setCountDeleted,\r\n  countDeleted,\r\n  id,\r\n  text,\r\n  backgroundColor,\r\n}) {\r\n  const [isMarked, setIsMarked] = useState(false);\r\n\r\n  function handleMark() {\r\n    setIsMarked((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  function handleEdit(id, text) {\r\n    setTodoEditing(id);\r\n    setEditingText(text);\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setItems((prevItems) => {\r\n      const updatedItems = prevItems.filter((item) => item.id !== id);\r\n      return updatedItems;\r\n    });\r\n\r\n    setCountDeleted(countDeleted + 1);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      style={{\r\n        backgroundColor: `${backgroundColor}`,\r\n      }}\r\n    >\r\n      <div>\r\n        <li\r\n          onClick={handleMark}\r\n          style={{\r\n            textDecoration: isMarked ? \"line-through\" : \"none\",\r\n          }}\r\n        >\r\n          {text}{\" \"}\r\n        </li>\r\n      </div>\r\n      <div className={styles.form3}>\r\n        <Button\r\n          onClick={() => {\r\n            handleEdit(id, text);\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>{\" \"}\r\n        <Button\r\n          onClick={() => {\r\n            deleteItem(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"./UI/Button/Button\";\r\nimport styles from \"./ToDoInput/ToDoInput.module.css\";\r\n\r\nfunction EditableRow({\r\n  setTodoEditing,\r\n  setItems,\r\n  editingText,\r\n  setEditingText,\r\n  setCountEdited,\r\n  countEdited,\r\n  id,\r\n}) {\r\n  function handleCancelClick() {\r\n    setTodoEditing(null);\r\n  }\r\n\r\n  function handleSaveEdited(id) {\r\n    const editArr = (prevItems) => {\r\n      const updatedItems = prevItems.filter((item) => item.id !== id);\r\n      return updatedItems;\r\n    };\r\n    setItems(editArr);\r\n\r\n    setItems((editArr) => {\r\n      const editTodo = [...editArr];\r\n      editTodo.unshift({\r\n        id: uuidv4(),\r\n        text: editingText.slice(0, 24),\r\n        backgroundColor: `${\r\n          \"#\" + Math.floor(Math.random() * 16777215).toString(16)\r\n        }`,\r\n      });\r\n      return editTodo;\r\n    });\r\n\r\n    setTodoEditing(null);\r\n    setCountEdited(countEdited + 1);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setEditingText(e.target.value)}\r\n        value={editingText}\r\n        id={id}\r\n      />{\" \"}\r\n      <Button onClick={() => handleSaveEdited(id)}>Save</Button>{\" \"}\r\n      <Button type=\"button\" onClick={() => handleCancelClick(id)}>\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableRow;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\r\nimport EditableRow from \"./EditableRow\";\r\n\r\nexport default function ToDoList({\r\n  items,\r\n  setItems,\r\n  setTodoEditing,\r\n  setCountEdited,\r\n  countEdited,\r\n  countDeleted,\r\n  setCountDeleted,\r\n  todoEditing,\r\n  setEditingText,\r\n  editingText,\r\n  backgroundColor,\r\n}) {\r\n  return (\r\n    <div>\r\n      <form>\r\n        {/* <ul> */}\r\n        {items.map((item) =>\r\n          todoEditing === item.id ? (\r\n            <EditableRow\r\n              key={item.id}\r\n              id={item.id}\r\n              editingText={editingText}\r\n              setEditingText={setEditingText}\r\n              setItems={setItems}\r\n              setTodoEditing={setTodoEditing}\r\n              setCountEdited={setCountEdited}\r\n              countEdited={countEdited}\r\n              // hex={hex}\r\n            />\r\n          ) : (\r\n            <ToDoItem\r\n              key={item.id}\r\n              id={item.id}\r\n              text={item.text}\r\n              backgroundColor={item.backgroundColor}\r\n              setTodoEditing={setTodoEditing}\r\n              setEditingText={setEditingText}\r\n              setItems={setItems}\r\n              countDeleted={countDeleted}\r\n              setCountDeleted={setCountDeleted}\r\n              // hex={hex}\r\n            />\r\n          )\r\n        )}\r\n        {/* </ul> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport ToDoInput from \"../ToDoInput/ToDoInput\";\r\nimport Counter from \"../Counter\";\r\nimport Header from \"../Header/Header\";\r\nimport ToDoList from \"../ToDoList\";\r\nimport useLocalStorage from \"../useLocalStorage\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [items, setItems] = useLocalStorage(\"items\", []);\r\n\r\n  const [todoEditing, setTodoEditing] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n\r\n  const [countCreated, setCountCreated] = useLocalStorage(\"countCreated\", 0);\r\n  const [countEdited, setCountEdited] = useLocalStorage(\"countEdited\", 0);\r\n  const [countDeleted, setCountDeleted] = useLocalStorage(\"countDeleted\", 0);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header items={items} />\r\n      <Counter\r\n        countCreated={countCreated}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n      />\r\n      <ToDoInput\r\n        items={items}\r\n        setItems={setItems}\r\n        setInputText={setInputText}\r\n        inputText={inputText}\r\n        setEditingText={setEditingText}\r\n        editingText={editingText}\r\n        setCountCreated={setCountCreated}\r\n        setCountDeleted={setCountDeleted}\r\n        setCountEdited={setCountEdited}\r\n        countCreated={countCreated}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n        setTodoEditing={setTodoEditing}\r\n      />\r\n\r\n      <ToDoList\r\n        items={items}\r\n        setItems={setItems}\r\n        setTodoEditing={setTodoEditing}\r\n        setCountEdited={setCountEdited}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n        setCountDeleted={setCountDeleted}\r\n        todoEditing={todoEditing}\r\n        setEditingText={setEditingText}\r\n        editingText={editingText}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}