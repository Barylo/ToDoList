{"version":3,"sources":["components/ToDoInput.jsx","components/Counter.jsx","components/Header.jsx","components/ToDoItem.jsx","components/EditableRow.jsx","components/ToDoList.jsx","components/useLocalStorage.jsx","components/App.jsx","index.js"],"names":["ToDoInput","items","setItems","setInputText","inputText","setCountCreated","countCreated","addItem","prevItems","newTodo","unshift","id","uuidv4","text","className","onChange","event","newValue","target","value","onKeyDown","handleKeyDown","key","type","onClick","e","preventDefault","fetch","then","response","json","data","map","item","Counter","countEdited","countDeleted","Header","length","ToDoItem","setTodoEditing","setEditingText","setCountDeleted","useState","isMarked","setIsMarked","prevValue","style","textDecoration","handleEdit","filter","deleteItem","EditableRow","editingText","setCountEdited","editArr","editTodo","handleSaveEdited","ToDoList","todoEditing","handleCancelClick","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d74874a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction ToDoInput({\r\n  items,\r\n  setItems,\r\n  setInputText,\r\n  inputText,\r\n  setCountCreated,\r\n  countCreated,\r\n}) {\r\n  const fetchData = (e) => {\r\n    e.preventDefault();\r\n    let url =\r\n      \"https://gist.githubusercontent.com/alexandrtovmach/0c8a29b734075864727228c559fe9f96/raw/c4e4133c9658af4c4b3474475273b23b4a70b4af/todo-task.json\";\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems([\r\n          ...items,\r\n          ...data.map((item) => {\r\n            return {\r\n              text: item.text,\r\n              id: uuidv4(),\r\n            };\r\n          }),\r\n        ]);\r\n      });\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  function addItem() {\r\n    setItems((prevItems) => {\r\n      const newTodo = [...prevItems];\r\n      newTodo.unshift({ id: uuidv4(), text: inputText });\r\n      return newTodo;\r\n    });\r\n\r\n    setInputText(\"\");\r\n    setCountCreated(countCreated + 1);\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    if (event.key === \"Enter\") {\r\n      addItem();\r\n    }\r\n    return <input type=\"text\" onKeyDown={handleKeyDown} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        type=\"text\"\r\n        value={inputText}\r\n      />\r\n      <button onClick={addItem}>\r\n        <span>Add</span>\r\n      </button>\r\n      <button onClick={fetchData}>\r\n        <span>Get TodoList from outside data</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from \"react\";\r\n\r\nfunction Counter({ countCreated, countEdited, countDeleted }) {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <p>{countCreated} ToDoes are created</p>\r\n      <p>{countEdited} ToDoes are updated</p>\r\n      <p>{countDeleted} ToDoes are deleted</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nexport default function Header({ items }) {\r\n  return (\r\n    <div className=\"heading\">\r\n      <h1>To-Do List with {items.length} tasks</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem({\r\n  setTodoEditing,\r\n  setEditingText,\r\n  setItems,\r\n  setCountDeleted,\r\n  countDeleted,\r\n  id,\r\n  text,\r\n}) {\r\n  const [isMarked, setIsMarked] = useState(false);\r\n\r\n  function handleMark() {\r\n    setIsMarked((prevValue) => {\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  function handleEdit(id, text) {\r\n    setTodoEditing(id);\r\n    setEditingText(text);\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setItems((prevItems) => {\r\n      const updatedItems = prevItems.filter((item) => item.id !== id);\r\n      return updatedItems;\r\n    });\r\n\r\n    setCountDeleted(countDeleted + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <li\r\n        onClick={handleMark}\r\n        style={{ textDecoration: isMarked ? \"line-through\" : \"none\" }}\r\n      >\r\n        {text}{\" \"}\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            handleEdit(id, text);\r\n          }}\r\n        >\r\n          Edit\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            deleteItem(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction EditableRow({\r\n  setTodoEditing,\r\n  setItems,\r\n  editingText,\r\n  setEditingText,\r\n  setCountEdited,\r\n  countEdited,\r\n  id,\r\n}) {\r\n  function handleCancelClick() {\r\n    setTodoEditing(null);\r\n  }\r\n\r\n  function handleSaveEdited(id) {\r\n    const editArr = (prevItems) => {\r\n      const updatedItems = prevItems.filter((item) => item.id !== id);\r\n      return updatedItems;\r\n    };\r\n    setItems(editArr);\r\n\r\n    setItems((editArr) => {\r\n      const editTodo = [...editArr];\r\n      editTodo.unshift({ id: uuidv4(), text: editingText });\r\n      return editTodo;\r\n    });\r\n\r\n    setTodoEditing(null);\r\n    setCountEdited(countEdited + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setEditingText(e.target.value)}\r\n        value={editingText}\r\n        id={id}\r\n      />\r\n      <button className=\"btn\" onClick={() => handleSaveEdited(id)}>\r\n        Save\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn\"\r\n        onClick={() => handleCancelClick(id)}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableRow;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport EditableRow from \"./EditableRow\";\r\n\r\nexport default function ToDoList({\r\n  items,\r\n  setItems,\r\n  setTodoEditing,\r\n  setCountEdited,\r\n  countEdited,\r\n  countDeleted,\r\n  setCountDeleted,\r\n  todoEditing,\r\n  handleCancelClick,\r\n  handleSaveEdited,\r\n  setEditingText,\r\n  editingText,\r\n}) {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <ul>\r\n          {items.map((item) =>\r\n            todoEditing === item.id ? (\r\n              <EditableRow\r\n                key={item.id}\r\n                id={item.id}\r\n                editingText={editingText}\r\n                setEditingText={setEditingText}\r\n                setItems={setItems}\r\n                setTodoEditing={setTodoEditing}\r\n                setCountEdited={setCountEdited}\r\n                countEdited={countEdited}\r\n              />\r\n            ) : (\r\n              <ToDoItem\r\n                key={item.id}\r\n                id={item.id}\r\n                text={item.text}\r\n                setTodoEditing={setTodoEditing}\r\n                setEditingText={setEditingText}\r\n                setItems={setItems}\r\n                countDeleted={countDeleted}\r\n                setCountDeleted={setCountDeleted}\r\n              />\r\n            )\r\n          )}\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    if (typeof window === \"undefined\") {\r\n      return initialValue;\r\n    }\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      if (typeof window !== \"undefined\") {\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport ToDoInput from \"./ToDoInput\";\r\nimport Counter from \"./Counter\";\r\nimport Header from \"./Header\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [items, setItems] = useLocalStorage(\"items\", []);\r\n\r\n  const [todoEditing, setTodoEditing] = useState(null);\r\n  const [editingText, setEditingText] = useState(\"\");\r\n\r\n  const [countCreated, setCountCreated] = useLocalStorage(\"countCreated\", 0);\r\n  const [countEdited, setCountEdited] = useLocalStorage(\"countEdited\", 0);\r\n  const [countDeleted, setCountDeleted] = useLocalStorage(\"countDeleted\", 0);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header items={items} />\r\n      <Counter\r\n        countCreated={countCreated}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n      />\r\n      <ToDoInput\r\n        items={items}\r\n        setItems={setItems}\r\n        setInputText={setInputText}\r\n        inputText={inputText}\r\n        setEditingText={setEditingText}\r\n        editingText={editingText}\r\n        setCountCreated={setCountCreated}\r\n        setCountDeleted={setCountDeleted}\r\n        setCountEdited={setCountEdited}\r\n        countCreated={countCreated}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n        setTodoEditing={setTodoEditing}\r\n      />\r\n      <ToDoList\r\n        items={items}\r\n        setItems={setItems}\r\n        setTodoEditing={setTodoEditing}\r\n        setCountEdited={setCountEdited}\r\n        countEdited={countEdited}\r\n        countDeleted={countDeleted}\r\n        setCountDeleted={setCountDeleted}\r\n        todoEditing={todoEditing}\r\n        setEditingText={setEditingText}\r\n        editingText={editingText}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}